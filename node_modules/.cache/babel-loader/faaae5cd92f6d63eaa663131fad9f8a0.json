{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tru\\\\Downloads\\\\project4\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ni;\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // useEffect(() => {\n  //   const storedUsewrINfo = localStorage.getItem(\"IsLoggedIn\");\n  //   if (storedUsewrINfo === \"1\") {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  const user = {\n    Id: \"abcd@gmail.com\",\n    password: \"12345678900\"\n  };\n\n  const loginHandler = (email, password) => {\n    if (email === user.Id && password === user.password) {\n      setIsLoggedIn(true);\n      localStorage.setItem(\"IsLoggedIn\", \"1\");\n    }\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Tru/Downloads/project4/src/App.js"],"names":["React","useState","Grid","Typography","Login","Home","i","App","isLoggedIn","setIsLoggedIn","user","Id","password","loginHandler","email","localStorage","setItem","logoutHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,eAAjC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AACAC,CAAC;;AAED,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C,CADa,CAEb;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,IAAI,GAAG;AACXC,IAAAA,EAAE,EAAE,gBADO;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GAAb;;AAKA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQF,QAAR,KAAqB;AACxC,QAAIE,KAAK,KAAKJ,IAAI,CAACC,EAAf,IAAqBC,QAAQ,KAAKF,IAAI,CAACE,QAA3C,EAAqD;AACnDH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAM,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACD;AACF,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAM;AAC1BR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,UAAD;AAAA,iBACG,CAACD,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEK;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGL,UAAU,iBACT,QAAC,IAAD;AAAM,QAAA,UAAU,EAAEA,UAAlB;AAA8B,QAAA,QAAQ,EAAES;AAAxC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAnCQV,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\ni\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // useEffect(() => {\n  //   const storedUsewrINfo = localStorage.getItem(\"IsLoggedIn\");\n  //   if (storedUsewrINfo === \"1\") {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  const user = {\n    Id: \"abcd@gmail.com\",\n    password: \"12345678900\",\n  };\n\n  const loginHandler = (email, password) => {\n    if (email === user.Id && password === user.password) {\n      setIsLoggedIn(true);\n      localStorage.setItem(\"IsLoggedIn\", \"1\");\n    }\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <Grid>\n      <Typography>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && (\n          <Home isLoggedIn={isLoggedIn} onLogout={logoutHandler} />\n        )}\n      </Typography>\n    </Grid>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}