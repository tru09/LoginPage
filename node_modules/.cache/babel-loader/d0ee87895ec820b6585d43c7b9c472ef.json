{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tru\\\\Downloads\\\\project4\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport Navigation from \"./components/MainHeader/Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // useEffect(() => {\n  //   const storedUsewrINfo = localStorage.getItem(\"IsLoggedIn\");\n  //   if (storedUsewrINfo === \"1\") {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  const user = {\n    Id: 'abcd@gmail.com',\n    password: '12345678900'\n  };\n\n  const loginHandler = (email, password) => {\n    if (email === user.Id && password === user.password) {\n      setIsLoggedIn(true);\n      localStorage.setItem('IsLoggedIn', '1');\n    }\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 23\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Tru/Downloads/project4/src/App.js"],"names":["React","useState","Grid","Typography","Login","Home","Navigation","App","isLoggedIn","setIsLoggedIn","user","Id","password","loginHandler","email","localStorage","setItem","logoutHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,eAAjC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C,CADa,CAEb;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,IAAI,GAAC;AACTC,IAAAA,EAAE,EAAC,gBADM;AAETC,IAAAA,QAAQ,EAAC;AAFA,GAAX;;AAKA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQF,QAAR,KAAqB;AACxC,QAAGE,KAAK,KAAGJ,IAAI,CAACC,EAAb,IAAmBC,QAAQ,KAAGF,IAAI,CAACE,QAAtC,EAA+C;AAC7CH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAM,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAkC,GAAlC;AAED;AAEF,GAPD;;AASA,QAAMC,aAAa,GAAG,MAAM;AAC1BR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,UAAD;AAAA,iBACC,CAACD,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEK;AAAhB;AAAA;AAAA;AAAA;AAAA,cADhB,EAECL,UAAU,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFf,eAGA,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEA,UAAxB;AAAoC,QAAA,QAAQ,EAAES;AAA9C;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAtCQV,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport Navigation from \"./components/MainHeader/Navigation\";\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // useEffect(() => {\n  //   const storedUsewrINfo = localStorage.getItem(\"IsLoggedIn\");\n  //   if (storedUsewrINfo === \"1\") {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n   \n  const user={\n    Id:'abcd@gmail.com',\n    password:'12345678900',\n  }\n\n  const loginHandler = (email, password) => {\n    if(email===user.Id && password===user.password){\n      setIsLoggedIn(true);\n      localStorage.setItem('IsLoggedIn','1')\n\n    }\n    \n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <Grid>\n      <Typography>\n      {!isLoggedIn && <Login onLogin={loginHandler} />}\n      {isLoggedIn && <Home />}\n      <Navigation isLoggedIn={isLoggedIn} onLogout={logoutHandler} />\n      </Typography>\n\n     \n    </Grid>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}