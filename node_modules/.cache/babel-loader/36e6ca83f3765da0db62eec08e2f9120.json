{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tru\\\\Downloads\\\\project4\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport Navigation from \"./components/MainHeader/Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUsewrINfo = localStorage.getItem(\"IsLoggedIn\");\n\n    if (storedUsewrINfo === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, [email, password]);\n  const user = {\n    Id: 'abcd.com',\n    password: '12345678900'\n  };\n\n  const loginHandler = (email, password) => {\n    if (email === user.Id && password === user.password) {\n      setIsLoggedIn(true);\n      localStorage.setItem('IsLoggedIn', '1');\n    }\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 23\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Tru/Downloads/project4/src/App.js"],"names":["React","useState","useEffect","Grid","Typography","Login","Home","Navigation","App","isLoggedIn","setIsLoggedIn","storedUsewrINfo","localStorage","getItem","email","password","user","Id","loginHandler","setItem","logoutHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,eAAjC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAxB;;AACA,QAAIF,eAAe,KAAK,GAAxB,EAA6B;AAC3BD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GALQ,EAKN,CAACI,KAAD,EAAOC,QAAP,CALM,CAAT;AAOA,QAAMC,IAAI,GAAC;AACTC,IAAAA,EAAE,EAAC,UADM;AAETF,IAAAA,QAAQ,EAAC;AAFA,GAAX;;AAKA,QAAMG,YAAY,GAAG,CAACJ,KAAD,EAAQC,QAAR,KAAqB;AACxC,QAAGD,KAAK,KAAGE,IAAI,CAACC,EAAb,IAAmBF,QAAQ,KAAGC,IAAI,CAACD,QAAtC,EAA+C;AAC7CL,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,MAAAA,YAAY,CAACO,OAAb,CAAqB,YAArB,EAAkC,GAAlC;AAED;AAEF,GAPD;;AASA,QAAMC,aAAa,GAAG,MAAM;AAC1BV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,UAAD;AAAA,iBACC,CAACD,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,cADhB,EAECT,UAAU,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFf,eAGA,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEA,UAAxB;AAAoC,QAAA,QAAQ,EAAEW;AAA9C;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAtCQZ,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport Navigation from \"./components/MainHeader/Navigation\";\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUsewrINfo = localStorage.getItem(\"IsLoggedIn\");\n    if (storedUsewrINfo === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, [email,password]);\n   \n  const user={\n    Id:'abcd.com',\n    password:'12345678900',\n  }\n\n  const loginHandler = (email, password) => {\n    if(email===user.Id && password===user.password){\n      setIsLoggedIn(true);\n      localStorage.setItem('IsLoggedIn','1')\n\n    }\n    \n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <Grid>\n      <Typography>\n      {!isLoggedIn && <Login onLogin={loginHandler} />}\n      {isLoggedIn && <Home />}\n      <Navigation isLoggedIn={isLoggedIn} onLogout={logoutHandler} />\n      </Typography>\n\n     \n    </Grid>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}